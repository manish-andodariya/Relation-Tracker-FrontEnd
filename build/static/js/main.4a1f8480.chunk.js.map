{"version":3,"sources":["Components/FormAddUser.js","Components/ManageUsers.js","Components/ManageRelations.js","Components/TrackRelation.js","App.js","reportWebVitals.js","index.js"],"names":["FormAddUser","addUsers","useState","text","setText","className","method","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","ManageUsers","res","setRes","users","setUsers","useEffect","a","fetchData","dataFromServer","getData","fetch","json","data","console","log","addUser","user","headers","body","JSON","stringify","msg","ManageRelations","setUser","relations","setRelations","p1","setP1","p2","setP2","r","setR","responce","setResponce","relationType","send","addRelation","currentTarget","map","relation","TrackRelation","checkRelation","found","visitedArray","link","length","App","setApp","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a1f8480.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FormAddUser = ({ addUsers }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text == \"\") {\r\n      alert(\"Please add details for the task first!!\");\r\n      return;\r\n    }\r\n    addUsers({ text });\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <form className=\"add-form\" method=\"POST\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Add New User</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter User Name\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Add\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormAddUser;\r\n","import React, { useState, useEffect } from 'react'\r\nimport FormAddUser from './FormAddUser'\r\n\r\nconst ManageUsers = () => {\r\n    const [res, setRes] = useState('');\r\n    const [users, setUsers] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const dataFromServer = await fetchData();\r\n            setUsers(dataFromServer.users);\r\n        };\r\n        getData();\r\n    }, [res]);\r\n\r\n    //fetching tasks\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"https://relation-tracker.glitch.me/users/\");\r\n        const data = await res.json();\r\n        console.log(data);\r\n        return data;\r\n    };\r\n\r\n    const addUser = async (user) => {\r\n        const res = await fetch(\r\n            \"https://relation-tracker.glitch.me/addUser/\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user),\r\n            }\r\n        );\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setRes(data);\r\n        setUsers([...users], data.users)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Manage Users Here ðŸ™Œ </h1>\r\n            <br />\r\n            <FormAddUser addUsers={addUser} />\r\n            <h3>{res.msg}</h3>\r\n            <br />\r\n            <h3>Available Users : {JSON.stringify(users)}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageUsers\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ManageRelations = () => {\r\n  const [user, setUser] = useState([\"user\"]);\r\n  const [relations, setRelations] = useState([\"Friend\"]);\r\n  const [p1, setP1] = useState(\"No\");\r\n  const [p2, setP2] = useState(\"No\");\r\n  const [r, setR] = useState(\"No\");\r\n  const [responce, setResponce] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const dataFromServer = await fetchData();\r\n      setUser(dataFromServer.users);\r\n      setRelations(dataFromServer.relationType);\r\n      setP1(dataFromServer.users[0]);\r\n      setP2(dataFromServer.users[0]);\r\n      setR(dataFromServer.relationType[0]);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  //fetching tasks\r\n  const fetchData = async () => {\r\n    const res = await fetch(\"https://relation-tracker.glitch.me/users/\");\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    const addRelation = async (send) => {\r\n      const res = await fetch(\r\n        \"https://relation-tracker.glitch.me/addrelation/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(send),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setResponce(data);\r\n    };\r\n    addRelation({ p1, p2, r });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Manage Relations Here ðŸ™Œ </h1>\r\n      <form className=\"add-form\" method=\"POST\" onSubmit={submit}>\r\n        <div className=\"form-control selectinput\">\r\n          <label>\r\n            Person 1 :\r\n            <select value={p1} onChange={(e) => setP1(e.currentTarget.value)}>\r\n              {user.map((user) => (\r\n                <option value={user}>{user}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Relation:\r\n            <select value={r} onChange={(e) => setR(e.currentTarget.value)}>\r\n              {relations.map((relation) => (\r\n                <option value={relation}>{relation}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Person 2 :\r\n            <select value={p2} onChange={(e) => setP2(e.currentTarget.value)}>\r\n              {user.map((user) => (\r\n                <option value={user}>{user}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <input type=\"submit\" value=\"Add Relation\" className=\"btn btn-block\" />\r\n      </form>\r\n      {responce && (\r\n        <h3>\r\n          {\" \"}\r\n          {JSON.stringify(responce.msg)} : {JSON.stringify(responce.relation)}\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ManageRelations;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst TrackRelation = () => {\r\n  const [user, setUser] = useState([\"user\"]);\r\n  const [p1, setP1] = useState(\"No\");\r\n  const [p2, setP2] = useState(\"No\");\r\n  const [res, setRes] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const dataFromServer = await fetchData();\r\n      setUser(dataFromServer.users);\r\n      setP1(dataFromServer.users[0]);\r\n      setP2(dataFromServer.users[0]);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  //fetching tasks\r\n  const fetchData = async () => {\r\n    const res = await fetch(\"https://relation-tracker.glitch.me/users/\");\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    const checkRelation = async (send) => {\r\n      const res = await fetch(\r\n        \"https://relation-tracker.glitch.me/trackrelation/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(send),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      setRes(data);\r\n    };\r\n    checkRelation({ p1, p2 });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Track Relations Here ðŸ™Œ </h1>\r\n      <form className=\"add-form\" method=\"POST\" onSubmit={submit}>\r\n        <div className=\"form-control selectinput\">\r\n          <label>\r\n            Person 1 :\r\n            <select value={p1} onChange={(e) => setP1(e.currentTarget.value)}>\r\n              {user.map((user) => (\r\n                <option value={user}>{user}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Person 2 :\r\n            <select value={p2} onChange={(e) => setP2(e.currentTarget.value)}>\r\n              {user.map((user) => (\r\n                <option value={user}>{user}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <input type=\"submit\" value=\"Check Relation\" className=\"btn btn-block\" />\r\n      </form>\r\n      {res.found != false && res.visitedArray\r\n        ? res.visitedArray.map((link) =>\r\n            res.visitedArray[res.visitedArray.length - 1] != link\r\n              ? link + \" => \"\r\n              : link\r\n          )\r\n        : \"No Relation\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackRelation;\r\n","import { Route, BrowserRouter } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './App.css';\nimport ManageUsers from './Components/ManageUsers';\nimport ManageRelations from './Components/ManageRelations';\nimport TrackRelation from './Components/TrackRelation';\n\nfunction App() {\n  useEffect(() => {\n    const setApp = async () => {\n      const res = await fetch(\"https://relation-tracker.glitch.me/\");\n      const data = await res;\n      console.log(data);\n    };\n    setApp();\n  }, []);\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header className=\"App-header\">\n          <h1>Relation Manager ðŸ”¥  </h1>\n          <div className=\"nav\">\n            <div className=\"linkbuttons\">\n              <NavLink to=\"/\" className=\"routeLink\">Manage Users</NavLink>\n              <NavLink to=\"/ManageRelations\" className=\"routeLink\">Manage Relations</NavLink>\n              <NavLink to=\"/TrackRelation\" className=\"routeLink\">Track Relations</NavLink>\n            </div>\n          </div>\n        </header>\n        <Route exact path=\"/\" component={ManageUsers} />\n        <Route path=\"/ManageRelations\" component={ManageRelations} />\n        <Route path=\"/TrackRelation\" component={TrackRelation} />\n      </BrowserRouter>\n      <footer>Don't refresh page you may loss your saved data.</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}